
====================
üîê SSH & File Transfer
====================

Connect to AWS EC2 Instance:
ssh -i "OliveAWS.pem" ubuntu@ec2-43-204-233-69.ap-south-1.compute.amazonaws.com
# Connect to AWS server (Ubuntu) from local machine using private key.

Upload File from Local to Server:
scp -i "C:\Path\To\OliveAWS.pem" "C:\Path\To\File.docx" ubuntu@43.204.233.69:/home/ubuntu/document
# Upload a file to the server. Run from local terminal (PowerShell).

Download File from Server to Local:
scp -i "C:\Path\To\OliveAWS.pem" ubuntu@<public-ip>:/home/ubuntu/filename.txt "C:\Path\To\Save\file.txt"
# Download a file from server to local machine.

Download from Web:
wget <URL>
curl -O <URL>
# Download file directly on server.

====================
üåê Server Setup
====================

Nginx & Apache:
sudo apt update                          # Update package list
sudo apt install nginx                  # Install Nginx
sudo apt install apache2               # Install Apache
sudo systemctl status nginx            # Check Nginx status
sudo systemctl start nginx             # Start Nginx

====================
üìÅ File & Directory Commands
====================

mkdir folderName                        # Create a new folder

====================
üîë SSH Key & User Management
====================

Generate SSH Keys:
ssh-keygen
# Generates public-private key pair (Run in PowerShell)

Create User:
sudo adduser <username>                # Add new user
sudo usermod -aG sudo <username>      # Grant sudo privileges

Set Up SSH for New User:
sudo mkdir /home/<username>/.ssh
sudo nano /home/<username>/.ssh/authorized_keys
# Paste public key here for remote login

Set Permissions:
sudo chown -R <username>:<username> /home/<username>/.ssh
sudo chmod 700 /home/<username>/.ssh
sudo chmod 600 /home/<username>/.ssh/authorized_keys

Connect as New User:
ssh <username>@<public-ip>
# Other user uses this to log in (with matching private key)

====================
‚ùå Delete User
====================

Check & Kill Running Process:
ps -u <username>                    # Check running processes
sudo kill -9 <PID>                 # Kill specific process

Delete User and Home Directory:
sudo deluser --remove-home <username>

====================
üë• User Info & Groups
====================

cut -d: -f1 /etc/passwd             # List all users
getent group sudo                   # Users in sudo group
id <username>                       # Get user UID, groups
grep '^<username>' /etc/passwd     # Get user-specific details

====================
üîÅ System Controls
====================

sudo reboot                         # Reboot the system

====================
üìä Logs & Monitoring
====================

Real-Time Log View:
sudo tail -f /var/log/syslog
sudo tail -f /var/log/auth.log

Check User History:
sudo cat /home/<username>/.bash_history

Service Status:
sudo systemctl status              # All services status
systemctl --failed                 # Failed services

Nginx Logs:
sudo tail -f /var/log/nginx/access.log
sudo tail -f /var/log/nginx/error.log

====================
‚òï Install Java
====================

sudo apt install openjdk-17-jdk -y

====================
üê¨ MySQL Installation
====================

sudo apt update
sudo apt install mysql-server -y
sudo mysql_secure_installation
sudo systemctl start mysql
sudo systemctl enable mysql
sudo mysql

MySQL DB & User Setup:
CREATE DATABASE practice_db;
USE practice_db;

CREATE TABLE users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(50),
  email VARCHAR(100)
);

INSERT INTO users (name, email) VALUES
('Alice', 'alice@example.com'),
('Bob', 'bob@example.com');

CREATE USER 'appuser'@'%' IDENTIFIED BY 'password123';
GRANT ALL PRIVILEGES ON practice_db.* TO 'appuser'@'%';
FLUSH PRIVILEGES;

====================
üêò PostgreSQL Installation
====================

sudo apt install postgresql postgresql-contrib -y

====================
üì¶ Package Management
====================

dpkg --get-selections               # List all installed packages
dpkg -l | grep <package-name>       # Check specific package
